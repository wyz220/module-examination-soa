<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:task="http://www.springframework.org/schema/task"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans          
        http://www.springframework.org/schema/beans/spring-beans.xsd          
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd "
        >  
      
          <context:component-scan base-package="com.msht.examination.controller" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
      <!-- 启用注解驱动 -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.msht.examination.security.bind.method.CurrentUserMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    <aop:aspectj-autoproxy proxy-target-class="true"/> 
    
      <!-- 扫描controller包 -->
      <!-- <context:component-scan base-package="com.msht.msb_enterprise.controller" />  -->
      <!-- <context:component-scan base-package="com.msht" /> -->
      
      <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->	
      <mvc:default-servlet-handler/>

        <bean id="mappingJacksonHttpMessageConverter"  
            class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
            <property name="prettyPrint" value="true"/>
            <property name="supportedMediaTypes">  
                <list>  
                    <value>text/html;charset=UTF-8</value>
                    <value>application/json;charset=UTF-8</value>  
                </list>  
            </property>  
        </bean>  
      
        <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
        <bean  
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
            <property name="messageConverters">  
                <list>  
                    <!-- json转换器 -->  
                    <ref bean="mappingJacksonHttpMessageConverter" />  
                </list>  
            </property>  
        </bean>  
      
        <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
        <bean  
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
            <property name="viewClass"  
                value="org.springframework.web.servlet.view.JstlView" />  
            <property name="prefix" value="/WEB-INF/views/" />  
            <property name="suffix" value=".jsp" />  
        </bean>  
      
        <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
        <bean id="multipartResolver"  
            class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
            <property name="defaultEncoding" value="UTF-8" />  
            <!-- 指定所上传文件的总大小不能超过20MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
            <property name="maxUploadSize" value="20480000" />  
        </bean>  

    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>

    <bean class="com.msht.examination.security.exception.DefaultExceptionHandler"/>
    </beans>  